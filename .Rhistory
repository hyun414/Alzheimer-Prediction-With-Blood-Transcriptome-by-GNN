data <- readr::read_delim("data/GSE61333_ligule_count.txt",delim = "\t")
data <- readr::read_delim("/GSE61333_ligule_count.txt",delim = "\t")
data <- readr::read_delim("./GSE61333_ligule_count.txt",delim = "\t")
data[1:5,1:10] 
names(data)[1] = "GeneId"
names(data)
col_sel = names(data)[-1]
mdata <- data %>%
tidyr::pivot_longer(
    .,
    col = all_of(col_sel)
    ) %>%
  mutate(
    group = gsub("-.*","", name) %>% gsub("[.].*","", .)
  )
library(ggplot2)
library(tidyr)
library(readr)
library(magrittr)
library(WGCNA)
mdata <- data %>%
+ tidyr::pivot_longer(
+     .,
+     col = all_of(col_sel)
+     ) %>%  
+   mutate(
+     group = gsub("-.*","", name) %>% gsub("[.].*","", .)
+   )
mdata <- data %>%
  tidyr::pivot_longer(
    .,                        # The dot is the the input data, magrittr tutorial
    col = all_of(col_sel)
    ) %>%  
  mutate(
    group = gsub("-.*","", name) %>% gsub("[.].*","", .)   # Get the shorter treatment names
  )
library(ggplot2)
library(tidyr)
library(readr)
library(magrittr)
library(WGCNA)
data <- readr::read_delim("./GSE61333_ligule_count.txt",delim = "\t")
names(data)[1] = "GeneId"
col_sel = names(data)[-1] 
library(mutate)
library(dplyr)
library(dplyr)
mdata <- data %>%
  tidyr::pivot_longer(
    .,                        # The dot is the the input data, magrittr tutorial
    col = all_of(col_sel)
    ) %>%  
  mutate(
    group = gsub("-.*","", name) %>% gsub("[.].*","", .)   # Get the shorter treatment names
  )
(
 p <- mdata %>%
    ggplot(., aes(x = name, y = value)) +             # x = treatment, y = RNA Seq count
    geom_violin() +                                   # violin plot, show distribution
    geom_point(alpha = 0.2) +                         # scatter plot
    theme_bw() +
    theme(
      axis.text.x = element_text(angle = 90)          # Rotate treatment text
    ) +
    labs(x = "Treatment Groups", y = "RNA Seq Counts") +
    facet_grid(cols = vars(group), drop = TRUE, scales = "free_x")      # Facet by hour
)
quit()
library(DESeq2)
install.packages(DESeq2)
install.packages("DESeq2")
BiocManager::install("DESeq2")
library(DESeq2)
de_input = as.matrix(data[,-1])
row.names(de_input) = data$GeneId
de_input[1:5,1:10]
meta_df <- data.frame( Sample = names(data[-1])) %>%
mutate(
    Type = gsub("-.*","", Sample) %>% gsub("[.].*","", .)
  )
q()
install.packages("genefilter")
BiocManager::install("genefilter")
q()
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(DESeq2)
library(genefilter) 
library(magrittr)
library(WGCNA)
data <- readr::read_delim("./GSE61333_ligule_count.txt",delim = "\t")
names(data)[1] = "GeneId"
col_sel = names(data)[-1]
mdata <- data %>%
  tidyr::pivot_longer(
    .,                        # The dot is the the input data, magrittr tutorial
    col = all_of(col_sel)
    ) %>%  
  mutate(
    group = gsub("-.*","", name) %>% gsub("[.].*","", .)   # Get the shorter treatment names
  )
de_input = as.matrix(data[,-1])
row.names(de_input) = data$GeneId
de_input[1:5,1:10]
meta_df <- data.frame( Sample = names(data[-1])) %>%
  mutate(
    Type = gsub("-.*","", Sample) %>% gsub("[.].*","", .)
  )
dds <- DESeqDataSetFromMatrix(round(de_input),
                              meta_df,
                              design = ~Type)
dds <- DESeq(dds)
vsd <- varianceStabilizingTransformation(dds)
wpn_vsd <- getVarianceStabilizedData(dds)
rv_wpn <- rowVars(wpn_vsd)
summary(rv_wpn)
q75_wpn <- quantile( rowVars(wpn_vsd), .75)  # <= original
q95_wpn <- quantile( rowVars(wpn_vsd), .95)  # <= changed to 95 quantile to reduce dataset
expr_normalized <- wpn_vsd[ rv_wpn > q95_wpn, ]
expr_normalized[1:5,1:10]
dim(expr_normalized)
expr_normalized_df <- data.frame(expr_normalized) %>%
  mutate(
    Gene_id = row.names(expr_normalized)
  ) %>%
  pivot_longer(-Gene_id)
expr_normalized_df %>% ggplot(., aes(x = name, y = value)) +
  geom_violin() +
  geom_point() +
  theme_bw() +
  theme(
    axis.text.x = element_text( angle = 90)
  ) +
  ylim(0, NA) +
  labs(
    title = "Normalized and 95 quantile Expression",
    x = "treatment",
    y = "normalized expression"
  )
q()
install.packages('IRkernel')
IRkernel::installspec()
q()
devtools::install_github("IRkernel/IRkernel")

install.packages("devtools")
IRkernel::installspec()

IRkernel::installspec(name="r", displayname="R")
q()
